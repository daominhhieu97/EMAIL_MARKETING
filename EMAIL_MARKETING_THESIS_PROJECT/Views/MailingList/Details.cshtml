@using EMAIL_MARKETING_THESIS_PROJECT.Views.Common
@model EMAIL_MARKETING_THESIS_PROJECT.Views.ViewModels.MailingLists.MailingListDetailsViewModel

@functions {
    private bool HasRfmSubscribers() => Model.Subscribers.Any(s => (s.Frequency != null || s.Monetary != null || s.Recency != null));
}

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>@Model.MailingList.Title</h4>
<br />
<div>
    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#addContactModal"><i class="fa fa-plus"></i>&nbsp;Add Contacts</button>
    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#segmentModal"><i class="fa fa-plus"></i>&nbsp;Add Segment</button>
    <a type="button" class="btn btn-info" asp-action="ViewSegments" asp-controller="MailingList" asp-route-id="@Model.MailingList.Id"><i class="fa fa-eye"></i>&nbsp;View Segments</a>
</div>
<br />

<table class="table table-hover">
    <thead class="table-primary">
        <tr>
            <th>@Html.Label("Name")</th>
            <th>@Html.Label("Phone")</th>
            <th>@Html.Label("Email")</th>
            @if (HasRfmSubscribers())
            {
                <th>@Html.Label("Rate")</th>

            }
            <th>@Html.Label("Action")</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Subscribers)
        {
            <tr>
                <th scope="row">@item.Name</th>
                <td>@item.Phone</td>
                <td>@item.Email</td>
                @if (HasRfmSubscribers())
                {
                    <td>@item.RFMClass</td>
                }
                <td>
                    <a class="btn btn-info" asp-action="EditSubscriber" asp-controller="MailingList" asp-route-id="@item.Id" data-toggle="modal" data-target="#editMailingList"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                    <a class="btn btn-info" asp-action="DeleteSubscriber" asp-controller="MailingList" asp-route-id="@item.Id" asp-route-mailinglistId="@Model.MailingList.Id"><i class="fa fa-trash" aria-hidden="true"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@using (@Html.BeginForm("AddSegment", "Segmentation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.AddSegmentationViewModel.MailingListId)
    <div id="segmentModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Segment</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <p>Segmentation Name: </p>
                    <div class="form-group"></div>
                    @Html.TextBoxFor(m => m.AddSegmentationViewModel.NewName, new { @class = "form-control" })

                    <hr />

                    <p>Special Filter: </p>
                    <div class="col-sm-3 form-check">
                        <input asp-for="AddSegmentationViewModel.UseRFMFiltering" class="form-check-input" data-toggle="tooltip" data-placement="top" title="If you check this, please choose at least one subscriber rate class.">
                        <label class="form-check-label">
                            RFM Filter
                        </label>
                    </div>

                    <hr />

                    <div id="kmeans-block form-group">
                        <p>Choose Subscriber Rate Class:</p>
                        @Html.DropDownListFor(m => m.AddSegmentationViewModel.SubscriberRateClass, RFMSegments.GetRFMSegments, "Please choose one...", new { @class = "form-control" })
                    </div>

                    <hr />

                    <div id="filtering-block">
                        <div class="container">
                            <p>Other Attributes</p>
                            <div class="row">
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Name)
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.TextBoxFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Name, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Email)
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.TextBoxFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Email, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Age)
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.TextBoxFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Age, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Area)
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.DropDownListFor(m => m.AddSegmentationViewModel.CriteriaViewModel.Area, Model.AddSegmentationViewModel.Areas, "", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3 form-group">
                                    @Html.LabelFor(m => m.AddSegmentationViewModel.CriteriaViewModel.City)
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.DropDownListFor(m => m.AddSegmentationViewModel.CriteriaViewModel.City, Model.AddSegmentationViewModel.Cities, "", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-primary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-default btn-primary">Add Segment</button>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("AddContacts", "MailingList", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.AddContactsViewModel.MailingListId)
    <div id="addContactModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Contacts</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">

                    <div class="form-check">
                        <input asp-for="AddContactsViewModel.RfmModel" class="form-check-input" data-toggle="tooltip" data-placement="top" title="If you check this, please input/import subscriber string format: Name, Email, Phone, Unit Price, Recency, Frequency">
                        <label class="form-check-label">
                            RFM Model
                        </label>
                    </div>

                    <hr />

                    <div class="form-group">
                        @Html.LabelFor(m => m.AddContactsViewModel.Subscribers) (Format: Name, Email, Phone)
                        @Html.TextAreaFor(m => m.AddContactsViewModel.Subscribers, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.AddContactsViewModel.File)
                        <input asp-for="AddContactsViewModel.File" class="form-control-file" type="file" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-default">Add Contacts</button>
                </div>
            </div>
        </div>
    </div>
}